[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Imperial College Science, Technology Medicine Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pratik Gupte. Author, maintainer. Imperial College Science, Technology Medicine. Copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gupte P (2024). daedalus.api: Serve 'daedalus' model via API. R package version 0.0.1, https://github.com/jameel-institute/daedalus.api.","code":"@Manual{,   title = {daedalus.api: Serve the 'daedalus' model via an API},   author = {Pratik Gupte},   year = {2024},   note = {R package version 0.0.1},   url = {https://github.com/jameel-institute/daedalus.api}, }"},{"path":"/index.html","id":"daedalusapi","dir":"","previous_headings":"","what":"Serve the daedalus model via an API","title":"Serve the daedalus model via an API","text":"daedalus.api API package daedalus package primarily intended internal use.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Serve the daedalus model via an API","text":"can install development version daedalus.api GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"jameel-institute/daedalus.api\")"},{"path":"/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Serve the daedalus model via an API","text":"","code":"# the image will be assigned the tag 'latest' docker pull mrcide/daedalus.api:latest  # run the container # see docker run --help for options docker run -d --name daedalus-api --rm -p 8001:8001 mrcide/daedalus.api:latest  # check root endpoint `GET/` curl -s http://localhost:8001 | jq  # stop the service docker stop daedalus-api"},{"path":"/index.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"Serve the daedalus model via an API","text":"add endpoint, implement method api.R @porcelain comment, run roxygen2::roxygenize() generate porcelain code porcelain.R. See porcelain docs details.","code":""},{"path":"/index.html","id":"testing","dir":"","previous_headings":"","what":"Testing","title":"Serve the daedalus model via an API","text":"Redis needs running e2e tests pass. Use ./scripts/redis start, tear ./scripts/redis kill.","code":""},{"path":"/index.html","id":"model-versions","dir":"","previous_headings":"","what":"Model versions","title":"Serve the daedalus model via an API","text":"API backwards compatible support running older versions model. endpoints support providing modelVersion query string parameter, e.g. run get metadata particular version model. Metadata stored inst/json folder, files named metadata_[VERSION].json [VERSION] first model version metadata applied. Requesting metadata model version return metadata applies version, (may first introduced earlier version). metadata response includes modelVersion property - value modelVersion requested query string, provided. modelVersion provided query string, returned model version recent metadata’s [VERSION].","code":""},{"path":"/index.html","id":"related-projects","dir":"","previous_headings":"","what":"Related projects","title":"Serve the daedalus model via an API","text":"See daedalus package implements DAEDALUS integrated model economic, social, health costs pandemic.","code":""},{"path":"/reference/Queue.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for managing running jobs on the redis queue #' — Queue","title":"Class for managing running jobs on the redis queue #' — Queue","text":"Class managing running jobs redis queue #' Class managing running jobs redis queue #'","code":""},{"path":"/reference/Queue.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class for managing running jobs on the redis queue #' — Queue","text":"controller RRQ controller","code":""},{"path":[]},{"path":"/reference/Queue.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class for managing running jobs on the redis queue #' — Queue","text":"Queue$new() Queue$queue_model_run() Queue$get_run_status() Queue$get_run_results()","code":""},{"path":"/reference/Queue.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class for managing running jobs on the redis queue #' — Queue","text":"Initialise redis connection rrq.","code":""},{"path":"/reference/Queue.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for managing running jobs on the redis queue #' — Queue","text":"","code":"Queue$new()"},{"path":"/reference/Queue.html","id":"method-queue-model-run-","dir":"Reference","previous_headings":"","what":"Method queue_model_run()","title":"Class for managing running jobs on the redis queue #' — Queue","text":"Submit model run job queue, return run id","code":""},{"path":"/reference/Queue.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for managing running jobs on the redis queue #' — Queue","text":"","code":"Queue$queue_model_run(parameters, model_version = NULL)"},{"path":"/reference/Queue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for managing running jobs on the redis queue #' — Queue","text":"parameters parameter values model run","code":""},{"path":"/reference/Queue.html","id":"method-get-run-status-","dir":"Reference","previous_headings":"","what":"Method get_run_status()","title":"Class for managing running jobs on the redis queue #' — Queue","text":"Get status information model run","code":""},{"path":"/reference/Queue.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for managing running jobs on the redis queue #' — Queue","text":"","code":"Queue$get_run_status(run_id)"},{"path":"/reference/Queue.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for managing running jobs on the redis queue #' — Queue","text":"run_id run id model run","code":""},{"path":"/reference/Queue.html","id":"method-get-run-results-","dir":"Reference","previous_headings":"","what":"Method get_run_results()","title":"Class for managing running jobs on the redis queue #' — Queue","text":"Get results data completed model run. Throws error task successful.","code":""},{"path":"/reference/Queue.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for managing running jobs on the redis queue #' — Queue","text":"","code":"Queue$get_run_results(run_id)"},{"path":"/reference/Queue.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for managing running jobs on the redis queue #' — Queue","text":"run_id run id model run","code":""},{"path":"/reference/api.html","id":null,"dir":"Reference","previous_headings":"","what":"Create daedalus.api — api","title":"Create daedalus.api — api","text":"Create daedalus.api server, porcelain object","code":""},{"path":"/reference/api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create daedalus.api — api","text":"","code":"api(validate = NULL, log_level = \"info\")"},{"path":"/reference/api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create daedalus.api — api","text":"validate Logical, indicating validation done responses.  FALSE production environments.  See porcelain::porcelain details log_level Logging level use. Sensible options \"\", \"info\" \"\".","code":""},{"path":"/reference/api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create daedalus.api — api","text":"porcelain::porcelain object. Notably start server","code":""},{"path":"/reference/daedalus.api-package.html","id":null,"dir":"Reference","previous_headings":"","what":"daedalus.api: Serve the 'daedalus' model via an API — daedalus.api-package","title":"daedalus.api: Serve the 'daedalus' model via an API — daedalus.api-package","text":"API server 'daedalus' model, using 'porcelain' 'plumber'.","code":""},{"path":[]},{"path":"/reference/daedalus.api-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"daedalus.api: Serve the 'daedalus' model via an API — daedalus.api-package","text":"Maintainer: Pratik Gupte p.gupte24@imperial.ac.uk (ORCID) contributors: Imperial College Science, Technology Medicine [copyright holder]","code":""}]
